package GUI;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author sharon
 */
import DBConnection.DatabaseConnection;
import com.formdev.flatlaf.FlatLightLaf;
import static com.swak.OS.java;
import java.sql.Connection;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class Registration extends javax.swing.JFrame {

    Connection con;
    Statement st = null;
    public Registration() {
        con = new DatabaseConnection().connectDB();
        try{
            st = con.createStatement();
        }catch(Exception e){
            e.printStackTrace();
        }
        initComponents();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel23 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        s1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        s2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        s3 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        s4 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        s5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        s6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        s7 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        s8 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        s9 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        s10 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        s11 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        s13 = new javax.swing.JPasswordField();
        s12 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        date = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("REGISTRATION");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 380, 90));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Password:");

        jLabel11.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Student Number:");

        s1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel10.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Strand/Section/Grade:");

        s2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel13.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("First Name:");

        s3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel14.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Middle Name:");

        s4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel20.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Last Name:");

        s5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel8.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Contanct Number:");

        s6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel7.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Birth Date:");

        jLabel21.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Address:");

        s7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel4.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Email:");

        s8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel18.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Parent/Guardian name:");

        s9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel9.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Parent's Contact Number:");

        s10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel5.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Username:");

        s11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jLabel17.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Confirm password:");

        s13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        s12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        jButton1.setBackground(new java.awt.Color(51, 153, 255));
        jButton1.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        button1.setBackground(new java.awt.Color(51, 153, 255));
        button1.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        button1.setForeground(new java.awt.Color(255, 255, 255));
        button1.setText("DONE");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        date.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 204, 255)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(s1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(s2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(92, 92, 92))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(153, 153, 153)
                                        .addComponent(jLabel7))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(s3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(s4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addGap(105, 105, 105)
                                            .addComponent(jLabel14))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(s5)))
                            .addComponent(s11)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(s9, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addComponent(s10, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(s7, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(s12, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6))
                                    .addComponent(s13)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(130, 130, 130)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(s8, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(s6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(date)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(s6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(s7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(s8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(s11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(jLabel17)
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(s12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(s13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 560, 550));

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        String snumber, sgs, fname, mname, lname, cnumber, bdate, address, email, pcnumber, gname, uname, upass, cpass;

    if (s1.getText().isEmpty() || s2.getText().isEmpty() || s3.getText().isEmpty() || 
        s4.getText().isEmpty() || s5.getText().isEmpty() || s6.getText().isEmpty() || 
        date.getText().isEmpty() || s7.getText().isEmpty() || s8.getText().isEmpty() || 
        s9.getText().isEmpty() || s10.getText().isEmpty() || s11.getText().isEmpty() || 
        s12.getText().isEmpty() || s13.getText().isEmpty()) {

        JOptionPane.showMessageDialog(new JFrame(), "Please fill in all fields!", "Incomplete Form", JOptionPane.WARNING_MESSAGE);
        return;
    }

    snumber = s1.getText();
    sgs = s2.getText();
    fname = s3.getText();
    mname = s4.getText();
    lname = s5.getText();
    cnumber = s6.getText();
    bdate = date.getText();
    address = s7.getText();
    email = s8.getText();
    gname = s9.getText();
    pcnumber = s10.getText();
    uname = s11.getText();
    upass = String.valueOf(s12.getPassword());
    cpass = String.valueOf(s13.getPassword());

    if (!upass.equals(cpass)) {
        JOptionPane.showMessageDialog(null, "Passwords do not match!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Inline username uniqueness check
    String checkQuery = "SELECT accUname FROM accountdetails WHERE accUname = ? " +
                        "UNION SELECT accUname FROM teacher_register WHERE accUname = ? " +
                        "UNION SELECT accUname FROM irregular_register WHERE accUname = ?";

    try (PreparedStatement pst = con.prepareStatement(checkQuery)) {
        pst.setString(1, uname);
        pst.setString(2, uname);
        pst.setString(3, uname);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            JOptionPane.showMessageDialog(null, "Username already exists. Please choose a different one.", "Duplicate Username", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error checking username uniqueness.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
           JTextField rfidField = new JTextField();
    int rfidOption = JOptionPane.showConfirmDialog(
        null,
        new Object[] { "Please scan or enter RFID:", rfidField },
        "Register RFID",
        JOptionPane.OK_CANCEL_OPTION,
        JOptionPane.PLAIN_MESSAGE
    );

    if (rfidOption != JOptionPane.OK_OPTION) {
        JOptionPane.showMessageDialog(null, "RFID registration cancelled or empty.", "Cancelled", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String rfid = rfidField.getText().trim();

    if (!rfid.matches("\\d{10}")) {
        JOptionPane.showMessageDialog(null, "Invalid RFID format. It must be exactly 10 digits.", "Invalid RFID", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String checkRFIDQuery = "SELECT accRFID FROM accountdetails WHERE accRFID = ?";
    try (PreparedStatement pst = con.prepareStatement(checkRFIDQuery)) {
        pst.setString(1, rfid);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            JOptionPane.showMessageDialog(null, "RFID already exists. Please scan a different one.", "Duplicate RFID", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error checking RFID uniqueness. Please try again later.", "Database Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // Prints the stack trace to help debug
        return;
    }



    String queryRegister = "INSERT INTO accountdetails(accID, accSection, accRFID, accFname, accMname, accLname, accNumber, accBdate, accAdd, accMail, accPname, accPn, " +
            "accUname, accPass, accCpass, role) " +
            "VALUES('" + snumber + "','" + sgs + "','"+rfid+"','" + fname + "','" + mname + "','" + lname + "','" + cnumber + "','" +
            bdate + "','" + address + "','" + email + "','" + gname + "','" + pcnumber + "','" + uname + "','" 
            + upass + "','" + cpass + "','student')";

    try {
        st.execute(queryRegister);
        JOptionPane.showMessageDialog(new JFrame(), "Data added Successfully!");

        s1.setText(""); s2.setText(""); s3.setText(""); s4.setText(""); s5.setText("");
        s6.setText(""); date.setText(""); s7.setText(""); s8.setText(""); s9.setText("");
        s10.setText(""); s11.setText(""); s12.setText(""); s13.setText("");

        this.dispose();
        new LoginPage().setVisible(true);
        ((JFrame) SwingUtilities.getWindowAncestor(s1)).dispose();

    } catch (SQLException ex) {
        Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "Registration failed.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_button1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new LoginPage().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
           FlatLightLaf.setup();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button1;
    private javax.swing.JTextField date;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField s1;
    private javax.swing.JTextField s10;
    private javax.swing.JTextField s11;
    private javax.swing.JPasswordField s12;
    private javax.swing.JPasswordField s13;
    private javax.swing.JTextField s2;
    private javax.swing.JTextField s3;
    private javax.swing.JTextField s4;
    private javax.swing.JTextField s5;
    private javax.swing.JTextField s6;
    private javax.swing.JTextField s7;
    private javax.swing.JTextField s8;
    private javax.swing.JTextField s9;
    // End of variables declaration//GEN-END:variables
}
@SuppressWarnings("unchecked")
class AttendanceManager {

    private Connection con;
    private JLabel label1, label2, label3, label4, label5, label6, label7, label8, label9, label10, label11, label12;

    public AttendanceManager(Connection con, String rfid, JLabel label1, JLabel label2, JLabel label3, JLabel label4, JLabel label5, JLabel label6, JLabel label7, JLabel label8, JLabel label9, JLabel label10, JLabel label11, JLabel label12) {
        this.con = con;
        this.label1 = label1;
        this.label2 = label2;
        this.label3 = label3;
        this.label4 = label4;
        this.label5 = label5;
        this.label6 = label6;
        this.label7 = label7;
        this.label8 = label8;
        this.label9 = label9;
        this.label10 = label10;
        this.label11 = label11;
        this.label12 = label12;
        processAttendance(rfid);
    }

    private void processAttendance(String rfid) {
        ResultSet rs = null;

        try {
            String query = "SELECT * FROM accountdetails WHERE accRFID = ? UNION SELECT * FROM irregular_register WHERE accRFID = ?";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, rfid);
            pst.setString(2, rfid);
            rs = pst.executeQuery();

            if (rs.next()) {
                String section = rs.getString("accSection");
                String fname = rs.getString("accFname");
                String mname = rs.getString("accMname");
                String lname = rs.getString("accLname");
                String number = rs.getString("accNumber");
                String address = rs.getString("accAdd");
                String mail = rs.getString("accMail");
                String pname = rs.getString("accPname");
                String pnum = rs.getString("accPn");
                String snum = rs.getString("accID");
                String timeIn = rs.getString("Time_In");
                String timeOut = rs.getString("Time_Out");
                String dbDate = rs.getString("TimeDate");

                label1.setText(snum);
                label2.setText(fname + " " + mname + " " + lname);
                label3.setText(section);
                label4.setText(number);
                label6.setText(address);
                label7.setText(mail);
                label8.setText(pname);
                label9.setText(pnum);

                Date now = new Date();
                DateFormat timeFormat = new SimpleDateFormat("hh:mm:ss a");
                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String currentTime = timeFormat.format(now);
                String currentDate = dateFormat.format(now);

                if (dbDate != null && !dbDate.equals(currentDate)) {
                    int confirm = JOptionPane.showConfirmDialog(null, "Previous record is from a different day.\nDo you want to reset and overwrite today's attendance?", "Reset Confirmation", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        resetTimes(rfid);
                        updateTimeIn(rfid, currentTime, currentDate);
                        label5.setText(currentTime);
                        label10.setText("");
                        rs.close();
                        pst.close();
                        return;
                    } else {
                        label5.setText(timeIn != null ? timeIn : "N/A");
                        label10.setText(timeOut != null ? timeOut : "N/A");
                        rs.close();
                        pst.close();
                        return;
                    }
                }

                if (timeIn == null) {
                    updateTimeIn(rfid, currentTime, currentDate);
                    label5.setText(currentTime);
                    label10.setText("");
                } else if (timeOut == null) {
                    updateTimeOut(rfid, currentTime);
                    label5.setText(timeIn);
                    label10.setText(currentTime);
                } else {
                    int confirm = JOptionPane.showConfirmDialog(null, "You already have Time In and Time Out recorded.\nDo you want to overwrite them?", "Overwrite Confirmation", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        resetTimes(rfid);
                        updateTimeIn(rfid, currentTime, currentDate);
                        label5.setText(currentTime);
                        label10.setText("");
                    } else {
                        label5.setText(timeIn);
                        label10.setText(timeOut);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "RFID not found in the database.", "Not Found", JOptionPane.ERROR_MESSAGE);
            }

            rs.close();
            pst.close();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error retrieving data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void updateTimeIn(String rfid, String currentTime, String currentDate) throws SQLException {
        String updateInAccount = "UPDATE accountdetails SET Time_In = ?, TimeDate = ? WHERE accRFID = ?";
        PreparedStatement inPstAccount = con.prepareStatement(updateInAccount);
        inPstAccount.setString(1, currentTime);
        inPstAccount.setString(2, currentDate);
        inPstAccount.setString(3, rfid);
        inPstAccount.executeUpdate();
        inPstAccount.close();

        String updateInIrregular = "UPDATE irregular_register SET Time_In = ?, TimeDate = ? WHERE accRFID = ?";
        PreparedStatement inPstIrregular = con.prepareStatement(updateInIrregular);
        inPstIrregular.setString(1, currentTime);
        inPstIrregular.setString(2, currentDate);
        inPstIrregular.setString(3, rfid);
        inPstIrregular.executeUpdate();
        inPstIrregular.close();
    }

    private void updateTimeOut(String rfid, String currentTime) throws SQLException {
        String updateOutAccount = "UPDATE accountdetails SET Time_Out = ? WHERE accRFID = ?";
        PreparedStatement outPstAccount = con.prepareStatement(updateOutAccount);
        outPstAccount.setString(1, currentTime);
        outPstAccount.setString(2, rfid);
        outPstAccount.executeUpdate();
        outPstAccount.close();

        String updateOutIrregular = "UPDATE irregular_register SET Time_Out = ? WHERE accRFID = ?";
        PreparedStatement outPstIrregular = con.prepareStatement(updateOutIrregular);
        outPstIrregular.setString(1, currentTime);
        outPstIrregular.setString(2, rfid);
        outPstIrregular.executeUpdate();
        outPstIrregular.close();
    }

    private void resetTimes(String rfid) throws SQLException {
        String resetQueryAccount = "UPDATE accountdetails SET Time_In = NULL, Time_Out = NULL, TimeDate = NULL WHERE accRFID = ?";
        PreparedStatement resetPstAccount = con.prepareStatement(resetQueryAccount);
        resetPstAccount.setString(1, rfid);
        resetPstAccount.executeUpdate();
        resetPstAccount.close();

        String resetQueryIrregular = "UPDATE irregular_register SET Time_In = NULL, Time_Out = NULL, TimeDate = NULL WHERE accRFID = ?";
        PreparedStatement resetPstIrregular = con.prepareStatement(resetQueryIrregular);
        resetPstIrregular.setString(1, rfid);
        resetPstIrregular.executeUpdate();
        resetPstIrregular.close();
    }
}



